'use strict'; // строгий, современный режим
alert('Привет мир!');

// Переменные

let newVariable = 'Hello'; // определили переменную с именем newVariable и присвоили ей значение hello
const myBirthday = '16.03.1993'; // неизменяемая переменная, нельзя перезаписать значение
const COLOR_RED = '#F00'; // константы в верхнем регистре для труднозапоминаемых значений, которые известны до начала исполнения скрипта, псевдонимы для "жёстко закодированных" значений

// Задача
let admin;
let name = 'Джон';
admin = name;
alert('admin');

// Типы данных

// Числовой (number). Целочисленные значения и числа с плавающей точкой
// Специальные числовые значения: Infinity - математическая бесконечность, NaN - вычислительная ошибка, результат неправильной или неопределённой математической операции

// Строка. Заключается в кавычки. Кроме одинарных и двойных кавычек, есть обратные.
// Обратные кавычки позволяют встраивать выражения в строку, заключая их  в ${..}

// Булевый (логический) тип. Boolean принимает только 2 значения true и false. Булевые значения могут быть результатом сравнений

// Значение "null" - специальное значение, ничего, пусто, значение неизвестно

// Underfined  - специальное значение, значение не было присвоено
// Если переменная объявлена, но ей не присвоено никакого значения, то её значением будет underfined

// Object - объект, используется для хранения коллекций данных или более сложных объектов

// Symbol - символ, используется для создания уникальных идентификаторов объектов

// Оператор typeof возвращает тип аргумента. Когда мы хотим обрабатывать значения различных типов по-разному или хотим сделать проверку.
// Вызов typeof x возвращает строку с именем типа